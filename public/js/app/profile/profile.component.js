"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require('@angular/core');
var forms_1 = require("@angular/forms");
var form_service_1 = require("../components/form.service");
var profile_service_1 = require("./profile.service");
var ProfileComponent = (function () {
    function ProfileComponent(_fb, _formService, _profileService) {
        this._fb = _fb;
        this._formService = _formService;
        this._profileService = _profileService;
    }
    ProfileComponent.prototype.ngOnInit = function () {
        this.registerForm = this._fb.group({
            lastName: ['', forms_1.Validators.required],
            post_code: ['', forms_1.Validators.required],
            email: ['', forms_1.Validators.compose([
                    forms_1.Validators.required
                ])],
            phone: ['', forms_1.Validators.required]
        });
    };
    ProfileComponent.prototype.onSubmit = function () {
        this._profileService.saveDemand(this._formService)
            .subscribe(function (data) { return console.log(data); }, function (error) { return console.log(error); });
    };
    ProfileComponent = __decorate([
        core_1.Component({
            selector: 'profile',
            template: "\n<div class=\"panel panel-default\">\n        <div class=\"panel-heading panel-heading-custom\">PROFILE </div>\n        <div class=\"panel-body\">\n        <section class=\"col-md-8 col-md-offset-2\">\n            <form [formGroup]=\"registerForm\" (ngSubmit)=\"onSubmit()\">\n                <div class=\"form-group\">\n                    <label for=\"name\">Nom</label>\n                    <input formControlName=\"lastName\" type=\"text\" id=\"name\" class=\"form-control\">\n                    <p *ngIf=\"registerForm.controls.lastName.errors\">This field is required!</p>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"email\">Mail</label>\n                    <input formControlName=\"email\" type=\"email\" id=\"email\" class=\"form-control\">\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"post_code\">Code postal</label>\n                    <input formControlName=\"post_code\" type=\"number\" id=\"post_code\" class=\"form-control\">\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"phone\">Num\u00E9ro de t\u00E9l\u00E9phone</label>\n                    <input formControlName=\"phone\" type=\"number\" id=\"phone\" class=\"form-control\">\n                </div>\n                <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"!registerForm.valid\">Valider</button>\n            </form>\n        </section>\n        </div>\n</div>\n"
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof forms_1.FormBuilder !== 'undefined' && forms_1.FormBuilder) === 'function' && _a) || Object, form_service_1.FormService, profile_service_1.ProfileService])
    ], ProfileComponent);
    return ProfileComponent;
    var _a;
}());
exports.ProfileComponent = ProfileComponent;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInByb2ZpbGUvcHJvZmlsZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBLHFCQUF3QixlQUN4QixDQUFDLENBRHNDO0FBRXZDLHNCQUFpRCxnQkFBZ0IsQ0FBQyxDQUFBO0FBQ2xFLDZCQUEwQiw0QkFBNEIsQ0FBQyxDQUFBO0FBRXZELGdDQUE2QixtQkFBbUIsQ0FBQyxDQUFBO0FBb0NqRDtJQU1JLDBCQUFvQixHQUFnQixFQUFTLFlBQXlCLEVBQVUsZUFBK0I7UUFBM0YsUUFBRyxHQUFILEdBQUcsQ0FBYTtRQUFTLGlCQUFZLEdBQVosWUFBWSxDQUFhO1FBQVUsb0JBQWUsR0FBZixlQUFlLENBQWdCO0lBRy9HLENBQUM7SUFNRCxtQ0FBUSxHQUFSO1FBR0ksSUFBSSxDQUFDLFlBQVksR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQztZQUMvQixRQUFRLEVBQUUsQ0FBQyxFQUFFLEVBQUUsa0JBQVUsQ0FBQyxRQUFRLENBQUM7WUFDbkMsU0FBUyxFQUFFLENBQUMsRUFBRSxFQUFFLGtCQUFVLENBQUMsUUFBUSxDQUFDO1lBQ3BDLEtBQUssRUFBRSxDQUFDLEVBQUUsRUFBRSxrQkFBVSxDQUFDLE9BQU8sQ0FBQztvQkFDM0Isa0JBQVUsQ0FBQyxRQUFRO2lCQUV0QixDQUFDLENBQUM7WUFDSCxLQUFLLEVBQUUsQ0FBQyxFQUFFLEVBQUUsa0JBQVUsQ0FBQyxRQUFRLENBQUM7U0FDbkMsQ0FBQyxDQUFBO0lBV04sQ0FBQztJQUVELG1DQUFRLEdBQVI7UUFVSSxJQUFJLENBQUMsZUFBZSxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDO2FBQzdDLFNBQVMsQ0FDTixVQUFBLElBQUksSUFBSSxPQUFBLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLEVBQWpCLENBQWlCLEVBQ3pCLFVBQUEsS0FBSyxJQUFJLE9BQUEsT0FBTyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsRUFBbEIsQ0FBa0IsQ0FDOUIsQ0FBQTtJQUlULENBQUM7SUExRkw7UUFBQyxnQkFBUyxDQUFDO1lBQ1AsUUFBUSxFQUFFLFNBQVM7WUFDbkIsUUFBUSxFQUFFLDAvQ0E0QmI7U0FDQSxDQUFDOzt3QkFBQTtJQW9FRix1QkFBQzs7QUFBRCxDQWxFQSxBQWtFQyxJQUFBO0FBbEVZLHdCQUFnQixtQkFrRTVCLENBQUEiLCJmaWxlIjoicHJvZmlsZS9wcm9maWxlLmNvbXBvbmVudC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Q29tcG9uZW50fSBmcm9tICdAYW5ndWxhci9jb3JlJ1xyXG5pbXBvcnQge0Zvcm1Qcm9maWxlfSBmcm9tICcuLi9wcm9maWxlL2Zvcm1Qcm9maWxlJ1xyXG5pbXBvcnQge0Zvcm1CdWlsZGVyLCBWYWxpZGF0b3JzLCBGb3JtR3JvdXB9IGZyb20gXCJAYW5ndWxhci9mb3Jtc1wiO1xyXG5pbXBvcnQge0Zvcm1TZXJ2aWNlfSBmcm9tIFwiLi4vY29tcG9uZW50cy9mb3JtLnNlcnZpY2VcIjtcclxuLy9pbXBvcnQge0NvbnRyb2xHcm91cH0gZnJvbSBcIi4uLy4uLy4uL3B1YmxpYy9qcy92ZW5kb3IvQGFuZ3VsYXIvY29tbW9uL2VzbS9zcmMvZm9ybXMtZGVwcmVjYXRlZC9tb2RlbFwiO1xyXG5pbXBvcnQge1Byb2ZpbGVTZXJ2aWNlfSBmcm9tIFwiLi9wcm9maWxlLnNlcnZpY2VcIjtcclxuLy9pbXBvcnQge0NvbnRyb2xHcm91cCwgQ29udHJvbH0gZnJvbSBcIkBhbmd1bGFyL2NvbW1vblwiO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgICBzZWxlY3RvcjogJ3Byb2ZpbGUnLFxyXG4gICAgdGVtcGxhdGU6IGBcclxuPGRpdiBjbGFzcz1cInBhbmVsIHBhbmVsLWRlZmF1bHRcIj5cclxuICAgICAgICA8ZGl2IGNsYXNzPVwicGFuZWwtaGVhZGluZyBwYW5lbC1oZWFkaW5nLWN1c3RvbVwiPlBST0ZJTEUgPC9kaXY+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cInBhbmVsLWJvZHlcIj5cclxuICAgICAgICA8c2VjdGlvbiBjbGFzcz1cImNvbC1tZC04IGNvbC1tZC1vZmZzZXQtMlwiPlxyXG4gICAgICAgICAgICA8Zm9ybSBbZm9ybUdyb3VwXT1cInJlZ2lzdGVyRm9ybVwiIChuZ1N1Ym1pdCk9XCJvblN1Ym1pdCgpXCI+XHJcbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZm9ybS1ncm91cFwiPlxyXG4gICAgICAgICAgICAgICAgICAgIDxsYWJlbCBmb3I9XCJuYW1lXCI+Tm9tPC9sYWJlbD5cclxuICAgICAgICAgICAgICAgICAgICA8aW5wdXQgZm9ybUNvbnRyb2xOYW1lPVwibGFzdE5hbWVcIiB0eXBlPVwidGV4dFwiIGlkPVwibmFtZVwiIGNsYXNzPVwiZm9ybS1jb250cm9sXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPHAgKm5nSWY9XCJyZWdpc3RlckZvcm0uY29udHJvbHMubGFzdE5hbWUuZXJyb3JzXCI+VGhpcyBmaWVsZCBpcyByZXF1aXJlZCE8L3A+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmb3JtLWdyb3VwXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj1cImVtYWlsXCI+TWFpbDwvbGFiZWw+XHJcbiAgICAgICAgICAgICAgICAgICAgPGlucHV0IGZvcm1Db250cm9sTmFtZT1cImVtYWlsXCIgdHlwZT1cImVtYWlsXCIgaWQ9XCJlbWFpbFwiIGNsYXNzPVwiZm9ybS1jb250cm9sXCI+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmb3JtLWdyb3VwXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj1cInBvc3RfY29kZVwiPkNvZGUgcG9zdGFsPC9sYWJlbD5cclxuICAgICAgICAgICAgICAgICAgICA8aW5wdXQgZm9ybUNvbnRyb2xOYW1lPVwicG9zdF9jb2RlXCIgdHlwZT1cIm51bWJlclwiIGlkPVwicG9zdF9jb2RlXCIgY2xhc3M9XCJmb3JtLWNvbnRyb2xcIj5cclxuICAgICAgICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZvcm0tZ3JvdXBcIj5cclxuICAgICAgICAgICAgICAgICAgICA8bGFiZWwgZm9yPVwicGhvbmVcIj5OdW3DqXJvIGRlIHTDqWzDqXBob25lPC9sYWJlbD5cclxuICAgICAgICAgICAgICAgICAgICA8aW5wdXQgZm9ybUNvbnRyb2xOYW1lPVwicGhvbmVcIiB0eXBlPVwibnVtYmVyXCIgaWQ9XCJwaG9uZVwiIGNsYXNzPVwiZm9ybS1jb250cm9sXCI+XHJcbiAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT1cInN1Ym1pdFwiIGNsYXNzPVwiYnRuIGJ0bi1wcmltYXJ5XCIgW2Rpc2FibGVkXT1cIiFyZWdpc3RlckZvcm0udmFsaWRcIj5WYWxpZGVyPC9idXR0b24+XHJcbiAgICAgICAgICAgIDwvZm9ybT5cclxuICAgICAgICA8L3NlY3Rpb24+XHJcbiAgICAgICAgPC9kaXY+XHJcbjwvZGl2PlxyXG5gXHJcbn0pXHJcblxyXG5leHBvcnQgY2xhc3MgUHJvZmlsZUNvbXBvbmVudCB7XHJcbiAgICAvL3B1YmxpYyBteUZvcm0gPSBuZXcgRm9ybVByb2ZpbGUoMCwnJywnJylcclxuICAvLyByZWdpc3RlckZvcm06IENvbnRyb2xHcm91cDtcclxuXHJcbiAgICByZWdpc3RlckZvcm06IEZvcm1Hcm91cDtcclxuXHJcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIF9mYjogRm9ybUJ1aWxkZXIsIHB1YmxpYyBfZm9ybVNlcnZpY2U6IEZvcm1TZXJ2aWNlLCBwcml2YXRlIF9wcm9maWxlU2VydmljZTogUHJvZmlsZVNlcnZpY2UpIHsgIC8vXHJcblxyXG4gICAgLy8gdGhpcy5mcy5tb2RlbGVTZWxlY3RlZDtcclxuICAgIH1cclxuXHJcblxyXG5cclxuXHJcblxyXG4gICAgbmdPbkluaXQoKSB7XHJcbiAgICAgICAvLyBjb25zb2xlLmxvZyh0aGlzLl9mb3JtU2VydmljZS5tb2RlbGVTZWxlY3RlZCk7XHJcbi8vY29uc29sZS5sb2codGhpcy5fZm9ybVNlcnZpY2UpO1xyXG4gICAgICAgIHRoaXMucmVnaXN0ZXJGb3JtID0gdGhpcy5fZmIuZ3JvdXAoe1xyXG4gICAgICAgICAgICBsYXN0TmFtZTogWycnLCBWYWxpZGF0b3JzLnJlcXVpcmVkXSxcclxuICAgICAgICAgICAgcG9zdF9jb2RlOiBbJycsIFZhbGlkYXRvcnMucmVxdWlyZWRdLFxyXG4gICAgICAgICAgICBlbWFpbDogWycnLCBWYWxpZGF0b3JzLmNvbXBvc2UoW1xyXG4gICAgICAgICAgICAgICAgVmFsaWRhdG9ycy5yZXF1aXJlZC8vLFxyXG4gICAgICAgICAgICAgICAgLy8gdGhpcy5pc0VtYWlsXHJcbiAgICAgICAgICAgIF0pXSxcclxuICAgICAgICAgICAgcGhvbmU6IFsnJywgVmFsaWRhdG9ycy5yZXF1aXJlZF1cclxuICAgICAgICB9KVxyXG5cclxuXHJcbiAgICAgICAgLy8gdGhpcy5teUZvcm0gPSB0aGlzLl9mYi5ncm91cCh7XHJcbiAgICAgICAgLy8gICAgIG5hbWU6IFsnJywgVmFsaWRhdG9ycy5yZXF1aXJlZF0sXHJcbiAgICAgICAgLy8gICAgIHBvc3RfY29kZTogWycnLCBWYWxpZGF0b3JzLnJlcXVpcmVkXSxcclxuICAgICAgICAvLyAgICAgZW1haWw6IFsnJywgVmFsaWRhdG9ycy5jb21wb3NlKFtcclxuICAgICAgICAvLyAgICAgICAgIFZhbGlkYXRvcnMucmVxdWlyZWQvLyxcclxuICAgICAgICAvLyAgICAgICAgLy8gdGhpcy5pc0VtYWlsXHJcbiAgICAgICAgLy8gICAgIF0pXVxyXG4gICAgICAgIC8vIH0pO1xyXG4gICAgfVxyXG5cclxuICAgIG9uU3VibWl0KCkge1xyXG4gICAgICAgLy8gY29uc29sZS5sb2codGhpcy5teUZvcm0uZW1haWwpO1xyXG5cclxuICAgICAgICAvL1xyXG4gICAgICAgIC8vIHRoaXMuX2Zvcm1TZXJ2aWNlLmVtYWlsID0gdGhpcy5yZWdpc3RlckZvcm0udmFsdWUuZW1haWw7XHJcbiAgICAgICAgLy8gdGhpcy5fZm9ybVNlcnZpY2UubmFtZSA9IHRoaXMucmVnaXN0ZXJGb3JtLnZhbHVlLmxhc3ROYW1lO1xyXG4gICAgICAgIC8vIHRoaXMuX2Zvcm1TZXJ2aWNlLnBvc3RfY29kZSA9IHRoaXMucmVnaXN0ZXJGb3JtLnZhbHVlLnBvc3RfY29kZTtcclxuICAgICAgICAvLyB0aGlzLl9mb3JtU2VydmljZS50ZWxlcGhvbmUgPSAgdGhpcy5yZWdpc3RlckZvcm0udmFsdWUucGhvbmU7XHJcbiAgICAgICAgLy8gdGhpcy5fZm9ybVNlcnZpY2UuZGF0ZURlbWFuZGUgPSBuZXcgRGF0ZSgpO1xyXG4vLyAgICBjb25zb2xlLmxvZyh0aGlzLl9mb3JtU2VydmljZSk7XHJcbiAgICAgICAgdGhpcy5fcHJvZmlsZVNlcnZpY2Uuc2F2ZURlbWFuZCh0aGlzLl9mb3JtU2VydmljZSlcclxuICAgICAgICAgICAgLnN1YnNjcmliZShcclxuICAgICAgICAgICAgICAgIGRhdGEgPT4gY29uc29sZS5sb2coZGF0YSksXHJcbiAgICAgICAgICAgICAgICBlcnJvciA9PiBjb25zb2xlLmxvZyhlcnJvcilcclxuICAgICAgICAgICAgKVxyXG5cclxuICAgICAgICAvL2NvbnN0IHByb2ZpbGUgPSBuZXcgRm9ybVByb2ZpbGUodGhpcy5yZWdpc3RlckZvcm0udmFsdWUubGFzdE5hbWU7LCB0dGhpcy5yZWdpc3RlckZvcm0udmFsdWUucG9zdF9jb2RlLCB0aGlzLnJlZ2lzdGVyRm9ybS52YWx1ZS5sYXN0TmFtZTspXHJcbiAgICAgICAgLy9jb25zb2xlLmxvZyhwcm9maWxlKTtcclxuICAgIH1cclxuXHJcblxyXG5cclxuICAgIC8vIHByaXZhdGUgaXNFbWFpbChjb250cm9sOiBDb250cm9sKToge1tzOiBzdHJpbmddOiBib29sZWFufSB7XHJcbiAgICAvLyAgICAgaWYgKCFjb250cm9sLnZhbHVlLm1hdGNoKFwiW2EtejAtOSEjJCUmJyorLz0/Xl9ge3x9fi1dKyg/OlxcLlthLXowLTkhIyQlJicqKy89P15fYHt8fX4tXSspKkAoPzpbYS16MC05XSg/OlthLXowLTktXSpbYS16MC05XSk/XFwuKStbYS16MC05XSg/OlthLXowLTktXSpbYS16MC05XSk/XCIpKSB7XHJcbiAgICAvLyAgICAgICAgIHJldHVybiB7aW52YWxpZE1haWw6IHRydWV9O1xyXG4gICAgLy8gICAgIH1cclxuICAgIC8vIH1cclxufSJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
