"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var core_1 = require('@angular/core');
var router_1 = require('@angular/router');
var http_1 = require("@angular/http");
var group_service_1 = require("./group.service");
var gridPanel_service_1 = require("../gridPanel.service");
var balletDetails_service_1 = require("./balletDetails.service");
var student_1 = require("./student");
var student_service_1 = require("./student.service");
var StudentComponent = (function () {
    function StudentComponent(router, _gridService, _groupService, _balletDetailsService, _studentService, route, _http) {
        this.router = router;
        this._gridService = _gridService;
        this._groupService = _groupService;
        this._balletDetailsService = _balletDetailsService;
        this._studentService = _studentService;
        this.route = route;
        this._http = _http;
        this.display_edit = false;
        this.student = {};
        this.becas = ['15%', '20%',
            '25%', '50%'];
        this.submitted = false;
    }
    StudentComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.sub = this.route.params.subscribe(function (params) {
            _this.obj_id = params['record'];
        });
        console.log(this.obj_id);
        console.log(this._gridService.dataGrid);
        this._balletDetailsService.getDatas(this.obj_id)
            .subscribe(function (data) {
            console.log(data);
            _this.student_info = data;
            _this.model = new student_1.Student(data._id, data.DNI, data.BECA, data.father, data.intolerancia, data.email_2, data.phone_2, data.note);
            console.log(_this.model);
            _this.display_edit = true;
        }, function (error) { return console.log(error); });
    };
    StudentComponent.prototype.onSubmit = function () {
        this._studentService.updateStudent(this.model)
            .subscribe(function (data) {
            console.log(data);
        }, function (error) { return console.log(error); });
        this.submitted = true;
        console.log(this.model);
    };
    StudentComponent = __decorate([
        core_1.Component({
            selector: 'group',
            template: "\n    \n\n       <nav class=\"form-navArrow\" *ngIf=\"display_edit\">\n            <a [routerLink]=\"['/grid']\" [queryParams]=\"{'grid_name': student_info.course_type, 'master_val': student_info.stage}\">\n            <button class=\"btn btn-warning\"><i class=\"glyphicon glyphicon-triangle-left\" ></i>BACK</button></a>\n       </nav>\n    \n    <div  *ngIf=\"display_edit\"> \n          \n          <div class=\"panel-heading panel-heading-custom\">\n                <h2>{{student_info.profile[1].firstname}}  {{student_info.profile[0].nom}}</h2>\n           </div>\n          <!--<h2>{{student_info.age}} years old</h2>-->\n    \n        <div class=\"panel-body\">\n            <form class=\"form-horizontal\" #studentForm=\"ngForm\" (ngSubmit)=\"onSubmit()\"  >\n                <div class=\"form-group\">\n                     <label for=\"DNI\" class=\"col-sm-2 control-label\" >DNI</label>\n                     <div class=\"col-sm-10\">\n                         <input \n                            myAutofocus\n                            class=\"form-control\"\n                            type=\"text\"\n                            id=\"DNI\"\n                            name=\"DNI\"\n                            value=\"{{student_info.DNI}}\"\n                              [(ngModel)]=\"model.DNI\" name=\"DNI\"\n                                #DNI=\"ngModel\">\n                     </div>\n                </div>\n                \n                <div class=\"form-group\">\n                    <label for=\"BECA\" class=\"col-sm-2 control-label\" >BECA</label>\n                    <div class=\"col-sm-10\">\n                        <select class=\"form-control\" id=\"BECA\"\n                            [(ngModel)]=\"model.BECA\" name=\"BECA\"\n                            #BECA=\"ngModel\" >\n                            <option *ngFor=\"let beca of becas\" [value]=\"beca\">{{beca}}</option>\n                        </select>\n                    </div>\n                </div>\n                \n                <div class=\"form-group\">\n                    <label for=\"Father\" class=\"col-sm-2 control-label\" >Father</label>\n                    <div class=\"col-sm-10\">\n                        <input \n                            class=\"form-control\"\n                            type=\"text\"\n                            id=\"father\"\n                            name=\"father\"\n                            value=\"{{student_info.father}}\"\n                            [(ngModel)]=\"model.father\" \n                            name=\"father\"\n                            #father=\"ngModel\">\n                    </div>\n                </div>\n                \n                <div class=\"form-group\">\n                    <label for=\"Intolerance\" class=\"col-sm-2 control-label\" >Intolerance</label>\n                    <div class=\"col-sm-10\">\n                        <input \n                            class=\"form-control\"\n                            type=\"text\"\n                            id=\"intolerancia\"\n                            name=\"intolerancia\"\n                            value=\"{{student_info.intolerancia}}\"\n                            [(ngModel)]=\"model.intolerancia\" \n                            name=\"intolerancia\"\n                            #intolerencia=\"ngModel\">\n                    </div>\n                </div>\n                 <div class=\"form-group\">\n                    <label for=\"phone2\" class=\"col-sm-2 control-label\" >Phone 2</label>\n                    <div class=\"col-sm-10\">\n                        <input \n                            class=\"form-control\"\n                            type=\"text\"\n                            id=\"phone2\"\n                            name=\"phone2\"\n                            value=\"{{student_info.phone2}}\"\n                            [(ngModel)]=\"model.phone2\" \n                            name=\"phone2\"\n                            #phone2=\"ngModel\">\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"email2\" class=\"col-sm-2 control-label\" >Email 2</label>\n                    <div class=\"col-sm-10\">\n                        <input \n                            class=\"form-control\"\n                            type=\"text\"\n                            id=\"email2\"\n                            name=\"email2\"\n                            value=\"{{student_info.email2}}\"\n                            [(ngModel)]=\"model.email2\" \n                            name=\"email2\"\n                            #email2=\"ngModel\">\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"notes\" class=\"col-sm-2 control-label\" >Notes</label>\n                    <div class=\"col-sm-10\">\n                        <input \n                            class=\"form-control\"\n                            type=\"text\"\n                            id=\"notes\"\n                            name=\"notes\"\n                            value=\"{{student_info.notes}}\"\n                            [(ngModel)]=\"model.notes\" \n                            name=\"notes\"\n                            #notes=\"ngModel\">\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <div class=\"col-sm-offset-2 col-sm-10\">\n                        <button type=\"submit\" class=\"btn btn-primary \" [disabled]=\"!studentForm.form.valid\">Submit</button>\n                    </div>\n                </div>\n            </form>    \n        </div>    \n    </div>"
        }), 
        __metadata('design:paramtypes', [(typeof (_a = typeof router_1.Router !== 'undefined' && router_1.Router) === 'function' && _a) || Object, gridPanel_service_1.GridPanelService, group_service_1.GroupService, balletDetails_service_1.BalletDetailsService, student_service_1.StudentService, (typeof (_b = typeof router_1.ActivatedRoute !== 'undefined' && router_1.ActivatedRoute) === 'function' && _b) || Object, (typeof (_c = typeof http_1.Http !== 'undefined' && http_1.Http) === 'function' && _c) || Object])
    ], StudentComponent);
    return StudentComponent;
    var _a, _b, _c;
}());
exports.StudentComponent = StudentComponent;

//# sourceMappingURL=data:application/json;base64,
