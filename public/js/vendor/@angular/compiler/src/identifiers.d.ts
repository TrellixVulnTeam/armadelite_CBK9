import { CompileTokenMetadata } from './compile_metadata';
import { CompileReflector } from './compile_reflector';
import * as o from './output/output_ast';
export declare class Identifiers {
<<<<<<< Updated upstream
    static ANALYZE_FOR_ENTRY_COMPONENTS: o.ExternalReference;
    static ElementRef: o.ExternalReference;
    static NgModuleRef: o.ExternalReference;
    static ViewContainerRef: o.ExternalReference;
    static ChangeDetectorRef: o.ExternalReference;
    static QueryList: o.ExternalReference;
    static TemplateRef: o.ExternalReference;
    static CodegenComponentFactoryResolver: o.ExternalReference;
    static ComponentFactoryResolver: o.ExternalReference;
    static ComponentFactory: o.ExternalReference;
    static ComponentRef: o.ExternalReference;
    static NgModuleFactory: o.ExternalReference;
    static createModuleFactory: o.ExternalReference;
    static moduleDef: o.ExternalReference;
    static moduleProviderDef: o.ExternalReference;
    static RegisterModuleFactoryFn: o.ExternalReference;
    static Injector: o.ExternalReference;
    static ViewEncapsulation: o.ExternalReference;
    static ChangeDetectionStrategy: o.ExternalReference;
    static SecurityContext: o.ExternalReference;
    static LOCALE_ID: o.ExternalReference;
    static TRANSLATIONS_FORMAT: o.ExternalReference;
    static inlineInterpolate: o.ExternalReference;
    static interpolate: o.ExternalReference;
    static EMPTY_ARRAY: o.ExternalReference;
    static EMPTY_MAP: o.ExternalReference;
    static Renderer: o.ExternalReference;
    static viewDef: o.ExternalReference;
    static elementDef: o.ExternalReference;
    static anchorDef: o.ExternalReference;
    static textDef: o.ExternalReference;
    static directiveDef: o.ExternalReference;
    static providerDef: o.ExternalReference;
    static queryDef: o.ExternalReference;
    static pureArrayDef: o.ExternalReference;
    static pureObjectDef: o.ExternalReference;
    static purePipeDef: o.ExternalReference;
    static pipeDef: o.ExternalReference;
    static nodeValue: o.ExternalReference;
    static ngContentDef: o.ExternalReference;
    static unwrapValue: o.ExternalReference;
    static createRendererType2: o.ExternalReference;
    static RendererType2: o.ExternalReference;
    static ViewDefinition: o.ExternalReference;
    static createComponentFactory: o.ExternalReference;
=======
    static ANALYZE_FOR_ENTRY_COMPONENTS: IdentifierSpec;
    static ElementRef: IdentifierSpec;
    static NgModuleRef: IdentifierSpec;
    static ViewContainerRef: IdentifierSpec;
    static ChangeDetectorRef: IdentifierSpec;
    static QueryList: IdentifierSpec;
    static TemplateRef: IdentifierSpec;
    static CodegenComponentFactoryResolver: IdentifierSpec;
    static ComponentFactoryResolver: IdentifierSpec;
    static ComponentFactory: IdentifierSpec;
    static ComponentRef: IdentifierSpec;
    static NgModuleFactory: IdentifierSpec;
    static NgModuleInjector: IdentifierSpec;
    static RegisterModuleFactoryFn: IdentifierSpec;
    static Injector: IdentifierSpec;
    static ViewEncapsulation: IdentifierSpec;
    static ChangeDetectionStrategy: IdentifierSpec;
    static SecurityContext: IdentifierSpec;
    static LOCALE_ID: IdentifierSpec;
    static TRANSLATIONS_FORMAT: IdentifierSpec;
    static inlineInterpolate: IdentifierSpec;
    static interpolate: IdentifierSpec;
    static EMPTY_ARRAY: IdentifierSpec;
    static EMPTY_MAP: IdentifierSpec;
    static Renderer: IdentifierSpec;
    static viewDef: IdentifierSpec;
    static elementDef: IdentifierSpec;
    static anchorDef: IdentifierSpec;
    static textDef: IdentifierSpec;
    static directiveDef: IdentifierSpec;
    static providerDef: IdentifierSpec;
    static queryDef: IdentifierSpec;
    static pureArrayDef: IdentifierSpec;
    static pureObjectDef: IdentifierSpec;
    static purePipeDef: IdentifierSpec;
    static pipeDef: IdentifierSpec;
    static nodeValue: IdentifierSpec;
    static ngContentDef: IdentifierSpec;
    static unwrapValue: IdentifierSpec;
    static createRendererType2: IdentifierSpec;
    static RendererType2: IdentifierSpec;
    static ViewDefinition: IdentifierSpec;
    static createComponentFactory: IdentifierSpec;
>>>>>>> Stashed changes
}
export declare function createTokenForReference(reference: any): CompileTokenMetadata;
export declare function createTokenForExternalReference(reflector: CompileReflector, reference: o.ExternalReference): CompileTokenMetadata;
